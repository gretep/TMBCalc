#!/bin/bash

#come paramentro anche index type
#il nome del file lo deriviamo da esso o lo inseriamo?
usage() {
  echo "Usage: $0 [-t/-tumor tumor sample]
  [-n/-normal normal sample ]
  [-i/-input input folder ]
  [-o/-output output folder]
  [-id/-index human index]" 1>&2 #Vedere se mi serve mettere sia la folder che il nome dell'index o va bene solo un parametro
}

exit_abnormal_code() {
  echo "$1" 1>&2
  # shellcheck disable=SC2086
  exit $2
}

exit_abnormal_usage() {
  echo "$1" 1>&2
  usage
  exit 1
}

exit_abnormal() {
  usage
  exit 1
}

while [ -n "$1" ]; do
  case "$1" in
  -tumor | -t)
    tumor="$2"
    shift
    ;;
  -normal | -n)
    normal="$2"
    shift
    ;;
  -input | -i)  #Si suppone che tumor e normal si trovino nella stessa cartella di input
    input="$2"
    shift
    ;;
  -output | -o)
    output="$2"
    shift
    ;;
  -index | -id)
    index="$2"
    shift
    ;;
  # -bamn | -bn)  #Da aggiungere in caso di paired end
  #   bamn="$2"
  #   shift
  #   ;;
  # -paired | -pr)
  #   paired="$2"
  #   echo "The value provided for paired is $paired"
  #   if ! { [ "$paired" = "yes" ] || [ "$paired" = "no" ]; }; then
  #     exit_abnormal_usage "Error: paired must be equal to yes or no."
  #   fi
  #   shift
  #   ;;
  *)
    exit_abnormal_usage "Error: invalid parameter \"$1\"."
    shift
    ;;
  esac
  shift
done



# Path
PROJ_PATH=$output
PATH_SAMPLES=$input
PATH_TUMOR=$output/tumor
PATH_NORMAL=$output/normal
PATH_FASTQ_TUMOR=$PATH_TUMOR/fastq
PATH_FASTQ_NORMAL=$PATH_NORMAL/fastq
PATH_SAM_TUMOR=$PATH_TUMOR/sam
PATH_SAM_NORMAL=$PATH_NORMAL/sam
PATH_BAM_TUMOR=$PATH_TUMOR/bam
PATH_BAM_NORMAL=$PATH_NORMAL/bam
PATH_VCF=$output/vcf
PATH_TXT=$output/txt
PATH_INDEX=$index #fasta e index sono insieme
PATH_PROGRAM=~/program #Per una versione futura questo sarà ho un parametro o una cartella che si crea scaricando i programmi
#PATH_JAVA=$PATH_PROGRAM/jdk1.8.0_201/bin/java #inserire il path fisso appena lo ho
PATH_PICARD=$PATH_PROGRAM/picard.jar
PATH_GATK=$PATH_PROGRAM/gatk-package-4.1.0.0-local.jar
PATH_ANNOVAR=$PATH_PROGRAM/annovar
# PATH_VARSCAN=~/program

#Mi servono la cartella "sam" e "fastq" visto che partiamo dai bam?

[[ ! -d $PATH_TUMOR ]] && mkdir "$PATH_TUMOR"
[[ ! -d $PATH_NORMAL ]] && mkdir "$PATH_NORMAL"
# [[ ! -d $PATH_FASTQ_TUMOR ]] && mkdir "$PATH_FASTQ_TUMOR"
# [[ ! -d $PATH_FASTQ_NORMAL ]] && mkdir "$PATH_FASTQ_NORMAL"
# [[ ! -d $PATH_SAM_TUMOR ]] && mkdir "$PATH_SAM_TUMOR"
# [[ ! -d $PATH_SAM_NORMAL ]] && mkdir "$PATH_SAM_NORMAL"
[[ ! -d $PATH_BAM_TUMOR ]] && mkdir "$PATH_BAM_TUMOR"
[[ ! -d $PATH_BAM_NORMAL ]] && mkdir "$PATH_BAM_NORMAL"
[[ ! -d $PATH_VCF ]] && mkdir "$PATH_VCF"
[[ ! -d $PATH_TXT ]] && mkdir "$PATH_TXT"

#Aggiungere cancellazione cartelle se già esistenti
echo "Pipeline starting"

    TUMOR_NAME=$(basename $tumor ".bam")  #Vedere se si deve eliminare qualche parte di nome

echo "Analyzing sample $TUMOR_NAME"

    echo "Tumor conversion"

    # samtools bam2fq $input/$tumor > $PATH_FASTQ_TUMOR/$TUMOR_NAME.fastq
    # #E se è paired reads?
    # echo "Tumor alignment"
    # bowtie2 -x $index/GRCh38_noalt_as/GRCh38_noalt_as -U $PATH_FASTQ_TUMOR/${TUMOR_NAME}.fastq -S $PATH_SAM_TUMOR/${TUMOR_NAME}.sam

    echo "Add or Replace Read Groups on Tumor"

    $PATH_JAVA -jar $PATH_PICARD AddOrReplaceReadGroups I=$PATH_SAM_TUMOR/${TUMOR_NAME}.sam O=$PATH_BAM_TUMOR/${TUMOR_NAME}_annotato.bam RGID=0 RGLB=lib1 RGPL=illumina RGPU=SN166 RGSM=$TUMOR_NAME CREATE_INDEX=TRUE

    echo "BAM sorting"
    $PATH_JAVA -jar $PATH_PICARD SortSam I=$PATH_BAM_TUMOR/${TUMOR_NAME}_annotato.bam O=$PATH_BAM_TUMOR/${TUMOR_NAME}_sorted.bam SORT_ORDER=coordinate

    echo "BAM ordering"
    $PATH_JAVA -jar $PATH_PICARD ReorderSam I=$PATH_BAM_TUMOR/${TUMOR_NAME}_sorted.bam O=$PATH_BAM_TUMOR/${TUMOR_NAME}_ordered.bam R=$index/hg38.fa CREATE_INDEX=TRUE

    echo "Duplicates elimination"
    $PATH_JAVA -jar $PATH_PICARD MarkDuplicates I=$PATH_BAM_TUMOR/${TUMOR_NAME}_ordered.bam REMOVE_DUPLICATES=TRUE O=$PATH_BAM_TUMOR/${TUMOR_NAME}_nodup.bam CREATE_INDEX=TRUE M=$PATH_BAM_TUMOR/${TUMOR_NAME}_file.txt

NORMAL_NAME=$(basename $normal ".bam")

echo "Normal conversion"

# samtools bam2fq $input/$normal > $PATH_NORMAL_TUMOR/$NORMAL_NAME.fastq
# #E se è paired reads?
# #Sono arrivata qui
# echo "Normal alignment"
# bowtie2 -x $index/hg38 -U $PATH_NORMAL_TUMOR/${NORMAL_NAME}.fastq -S $PATH_SAM_NORMAL/${NORMAL_NAME}.sam

echo "Add or Replace Read Groups on Normal"
$PATH_JAVA -jar $PATH_PICARD  AddOrReplaceReadGroups I=$PATH_SAM_NORMAL/${NORMAL_NAME}.sam O=$PATH_BAM_NORMAL/${NORMAL_NAME}_annotato.bam RGID=0 RGLB=lib1 RGPL=illumina RGPU=SN166 RGSM=$NORMAL_NAME CREATE_INDEX=TRUE

#La aggiungo, ma controllare se sono già stati tolti i duplicati nella pipeline di gdc

echo "BAM sorting"
$PATH_JAVA -jar $PATH_PICARD SortSam I=$PATH_BAM_NORMAL/${NORMAL_NAME}_annotato.bam O=$PATH_BAM_NORMAL/${NORMAL_NAME}_sorted.bam SORT_ORDER=coordinate
echo "BAM ordering"
$PATH_JAVA -jar $PATH_PICARD ReorderSam I=$PATH_BAM_NORMAL/${NORMAL_NAME}_sorted.bam O=$PATH_BAM_NORMAL/${NORMAL_NAME}_ordered.bam R=$index/hg38.fa CREATE_INDEX=TRUE

#Vedere nome index hg38, potrebbe essere ghrc38. Versione futura mettere parametro

echo "Duplicates elimination"
$PATH_JAVA -jar $PATH_PICARD MarkDuplicates I=$PATH_BAM_NORMAL/${NORMAL_NAME}_ordered.bam REMOVE_DUPLICATES=TRUE O=$PATH_BAM_NORMAL/${NORMAL_NAME}_nodup.bam CREATE_INDEX=TRUE M=$PATH_BAM_NORMAL/${NORMAL_NAME}_file.txt

#QUI
echo "Variant calling with GATK"

        $PATH_JAVA -jar $PATH_GATK Mutect2 -R $index/hg38.fa -I $PATH_BAM_TUMOR/${TUMOR_NAME}_nodup.bam -tumor $TUMOR_NAME -I $PATH_BAM_NORMAL/${NORMAL_NAME}_nodup.bam -normal $NORMAL_NAME -O $PATH_VCF/${TUMOR_NAME}.vcf -mbq 25

        #$PATH_JAVA -jar $PATH_GATK IndexFeatureFile -F $PATH_VCF$VCF_NAME_TB #Chiedere ad Anna a che serviva questo passaggio

        echo "VCF filtering"

        $PATH_JAVA -jar $PATH_GATK FilterMutectCalls -V $PATH_VCF/${TUMOR_NAME}.vcf -O $PATH_VCF/${TUMOR_NAME}_filtered.vcf

        echo "VCF pass"

        awk -F '\t' '{if($0 ~ /\#/) print; else if($7 == "PASS") print}' $PATH_VCF/${TUMOR_NAME}_filtered.vcf > $PATH_VCF/${TUMOR_NAME}_pass.vcf


echo "Variant calling with VarScan"

        samtools mpileup -B -f $index/hg38.fa -Q 25 -L 250 -d 250 $PATH_BAM_NORMAL/${NORMAL_NAME}_nodup.bam $PATH_BAM_TUMOR/${TUMOR_NAME}_nodup.bam | java -jar $PATH_VARSCAN/VarScan.v2.4.3.jar somatic -mpileup $PATH_VCF/${TUMOR_NAME}_somatic.vcf --min-var-freq 0.10 --strand-filter 1 --output-vcf 1
        #Vedere se funziona senza la jdk


        $PATH_JAVA -jar $PATH_VARSCAN/VarScan.v2.4.3.jar processSomatic $PATH_VCF/${TUMOR_NAME}_somatic.indel.vcf
        $PATH_JAVA -jar $PATH_VARSCAN/VarScan.v2.4.3.jar processSomatic $PATH_VCF/${TUMOR_NAME}_somatic.snp.vcf
        $PATH_JAVA -jar $PATH_VARSCAN/VarScan.v2.4.3.jar somaticFilter $PATH_VCF/${TUMOR_NAME}_somatic.snp.Somatic.hc.vcf -min-var-freq 0.10 -indel-file $PATH_VCF$VCF_SOMATIC_VARIATION.indel.vcf -output-file $PATH_VCF/${TUMOR_NAME}_somatic.snp.Somatic.hc.filter.vcf
        $PATH_JAVA -jar $PATH_VARSCAN/VarScan.v2.4.3.jar compare $PATH_VCF/${TUMOR_NAME}_somatic.indel.Somatic.hc.vcf $PATH_VCF/${TUMOR_NAME}_somatic.snp.Somatic.hc.filter.vcf merge $PATH_VCF/${TUMOR_NAME}_somatic_merge.vcf
        $PATH_JAVA -jar $PATH_VARSCAN/VarScan.v2.4.3.jar compare $PATH_VCF/${TUMOR_NAME}_somatic_merge.vcf $PATH_VCF/${TUMOR_NAME}_pass.vcf intersect $PATH_VCF/${TUMOR_NAME}_intersect.vcf

        echo "VCF final creation"
        perl $PATH_ANNOVAR/convert2annovar.pl -format vcf4old $PATH_VCF/${TUMOR_NAME}_intersect.vcf > $PATH_VCF/${TUMOR_NAME}_final.vcf

        echo "Annovar annotation"
        cd $PATH_ANNOVAR

        perl annotate_variation.pl $PATH_VCF/${TUMOR_NAME}_final.vcf ./ -vcfdbfile humandb/dbsnp_146.hg38.vcf -buildver hg38 -filter -dbtype vcf  #vedere se .vcf si toglie

        perl annotate_variation.pl -filter -dbtype cosmic88 -buildver  hg38 -out $PATH_TXT/$TUMOR_NAME $PATH_VCF/${TUMOR_NAME}_final.vcf.hg38_vcf_filtered humandb/

        perl annotate_variation.pl -filter -dbtype esp6500siv2_all -buildver hg38 -out $PATH_TXT/$TUMOR_NAME $PATH_TXT/${TUMOR_NAME}.hg38_cosmic88_filtered humandb/

        perl annotate_variation.pl -filter -dbtype 1000g2015aug_all -buildver hg38 -out $PATH_TXT/$TUMOR_NAME  $PATH_TXT/${TUMOR_NAME}.hg38_esp6500siv2_all_filtered humandb/

        perl annotate_variation.pl -dbtype refGene -buildver hg38 -out $PATH_TXT/$TUMOR_NAME $PATH_TXT/${TUMOR_NAME}.hg38_ALL.sites.2015_08_filtered -otherinfo humandb/



        sed '/^[[:blank:]]*$/d' $PATH_TXT/*.hg38_ALL.sites.2015_08_filtered | wc -l >  $PATH_TXT/${TUMOR_NAME}.txt #Capire cosa faceva Anna QUI
        #Aggiungere script R, però prima provarlo

#Cancellazione cartelle, da aggiungere dopo prova
